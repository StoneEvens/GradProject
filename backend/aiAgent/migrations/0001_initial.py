# Generated by Django 5.2 on 2025-09-30 06:10

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='自動從第一條訊息生成或使用者自訂', max_length=200, verbose_name='對話標題')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='建立時間')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新時間')),
                ('last_message_at', models.DateTimeField(blank=True, null=True, verbose_name='最後訊息時間')),
                ('message_count', models.IntegerField(default=0, verbose_name='訊息數量')),
                ('is_pinned', models.BooleanField(default=False, verbose_name='置頂')),
                ('is_archived', models.BooleanField(default=False, verbose_name='已封存')),
                ('context_data', models.JSONField(blank=True, default=dict, help_text='儲存寵物ID、位置等上下文資訊', verbose_name='對話上下文')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_conversations', to=settings.AUTH_USER_MODEL, verbose_name='使用者')),
            ],
            options={
                'verbose_name': 'AI 對話',
                'verbose_name_plural': 'AI 對話',
                'db_table': 'ai_conversations',
                'ordering': ['-last_message_at', '-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('user', '使用者'), ('assistant', 'AI 助理'), ('system', '系統')], max_length=20, verbose_name='角色')),
                ('content', models.TextField(verbose_name='訊息內容')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='建立時間')),
                ('intent', models.CharField(blank=True, max_length=50, null=True, verbose_name='識別的意圖')),
                ('confidence', models.FloatField(blank=True, null=True, verbose_name='信心度')),
                ('source', models.CharField(default='ai_agent', max_length=50, verbose_name='回應來源')),
                ('has_tutorial', models.BooleanField(default=False, verbose_name='包含教學')),
                ('tutorial_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='教學類型')),
                ('has_recommended_users', models.BooleanField(default=False, verbose_name='包含推薦用戶')),
                ('has_recommended_articles', models.BooleanField(default=False, verbose_name='包含推薦文章')),
                ('has_calculator', models.BooleanField(default=False, verbose_name='包含計算機')),
                ('has_operation', models.BooleanField(default=False, verbose_name='包含操作')),
                ('operation_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='操作類型')),
                ('additional_data', models.JSONField(blank=True, default=dict, help_text='推薦的用戶ID、文章ID、貼文詳情等', verbose_name='附加資料')),
                ('entities', models.JSONField(blank=True, default=dict, help_text='寵物品種、症狀、時間範圍等', verbose_name='提取的實體')),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='aiAgent.conversation', verbose_name='對話')),
            ],
            options={
                'verbose_name': 'AI 訊息',
                'verbose_name_plural': 'AI 訊息',
                'db_table': 'ai_messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConversationFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '非常不滿意'), (2, '不滿意'), (3, '普通'), (4, '滿意'), (5, '非常滿意')], verbose_name='評分')),
                ('comment', models.TextField(blank=True, help_text='使用者的詳細回饋', verbose_name='評論')),
                ('is_inaccurate', models.BooleanField(default=False, verbose_name='回答不準確')),
                ('is_unhelpful', models.BooleanField(default=False, verbose_name='沒有幫助')),
                ('is_inappropriate', models.BooleanField(default=False, verbose_name='不適當')),
                ('is_other', models.BooleanField(default=False, verbose_name='其他問題')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='建立時間')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_feedbacks', to=settings.AUTH_USER_MODEL, verbose_name='使用者')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='aiAgent.message', verbose_name='訊息')),
            ],
            options={
                'verbose_name': 'AI 對話回饋',
                'verbose_name_plural': 'AI 對話回饋',
                'db_table': 'ai_conversation_feedbacks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['user', '-last_message_at'], name='ai_conversa_user_id_288ab1_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['user', 'is_archived'], name='ai_conversa_user_id_6474db_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['conversation', 'created_at'], name='ai_messages_convers_15163f_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['role'], name='ai_messages_role_0601fb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='conversationfeedback',
            unique_together={('message', 'user')},
        ),
    ]
