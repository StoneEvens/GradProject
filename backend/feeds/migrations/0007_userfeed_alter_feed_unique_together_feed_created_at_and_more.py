# Generated by Django 5.2 on 2025-07-28 16:43

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('feeds', '0006_rename_user_id_feed_user'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        # 首先移除舊的 user 欄位
        migrations.RemoveField(
            model_name='feed',
            name='user',
        ),
        # 添加新的欄位到 Feed 模型
        migrations.AddField(
            model_name='feed',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='feed',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_feeds', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feed',
            name='front_image_path',
            field=models.CharField(blank=True, max_length=500, null=True),
        ),
        migrations.AddField(
            model_name='feed',
            name='nutrition_image_path',
            field=models.CharField(blank=True, max_length=500, null=True),
        ),
        migrations.AddField(
            model_name='feed',
            name='pet_type',
            field=models.CharField(choices=[('cat', '貓'), ('dog', '狗')], default='cat', max_length=10),
        ),
        migrations.AddField(
            model_name='feed',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        # 建立 UserFeed 模型
        migrations.CreateModel(
            name='UserFeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('last_used_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('custom_protein', models.FloatField(blank=True, null=True)),
                ('custom_fat', models.FloatField(blank=True, null=True)),
                ('custom_carbohydrate', models.FloatField(blank=True, null=True)),
                ('custom_calcium', models.FloatField(blank=True, null=True)),
                ('custom_phosphorus', models.FloatField(blank=True, null=True)),
                ('custom_magnesium', models.FloatField(blank=True, null=True)),
                ('custom_sodium', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        # 現在可以安全地設定 unique_together（因為 pet_type 欄位已存在）
        migrations.AlterUniqueTogether(
            name='feed',
            unique_together={('name', 'brand', 'pet_type')},
        ),
        migrations.AddIndex(
            model_name='feed',
            index=models.Index(fields=['pet_type', 'brand'], name='feeds_feed_pet_typ_3fb253_idx'),
        ),
        migrations.AddIndex(
            model_name='feed',
            index=models.Index(fields=['created_at'], name='feeds_feed_created_9a9eb0_idx'),
        ),
        migrations.AddField(
            model_name='userfeed',
            name='feed',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_relationships', to='feeds.feed'),
        ),
        migrations.AddField(
            model_name='userfeed',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_feeds', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='userfeed',
            index=models.Index(fields=['user', 'last_used_at'], name='feeds_userf_user_id_5f6e41_idx'),
        ),
        migrations.AddIndex(
            model_name='userfeed',
            index=models.Index(fields=['usage_count'], name='feeds_userf_usage_c_e821df_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userfeed',
            unique_together={('user', 'feed')},
        ),
    ]
