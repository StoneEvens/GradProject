# Generated by Django 5.2 on 2025-07-02 16:38

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('pets', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Feed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feed_name', models.CharField(max_length=100)),
                ('protein', models.FloatField(default=0, help_text='蛋白質 (g/100g)')),
                ('fat', models.FloatField(default=0, help_text='脂肪 (g/100g)')),
                ('calcium', models.FloatField(default=0, help_text='鈣 (g/100g)')),
                ('phosphorus', models.FloatField(default=0, help_text='磷 (g/100g)')),
                ('magnesium', models.FloatField(default=0, help_text='鎂 (mg/100g)')),
                ('sodium', models.FloatField(default=0, help_text='鈉 (mg/100g)')),
                ('carbohydrate', models.FloatField(default=0, help_text='碳水化合物 (g/100g)')),
                ('extracted_text', models.TextField(blank=True, help_text='OCR 提取的原始文本', null=True)),
                ('processing_status', models.CharField(choices=[('pending', '待處理'), ('processing', '處理中'), ('completed', '處理完成'), ('completed_with_warnings', '處理完成但有警告'), ('failed', '處理失敗')], default='pending', max_length=25, verbose_name='處理狀態')),
                ('processing_error', models.TextField(blank=True, verbose_name='處理錯誤信息')),
                ('popularity', models.IntegerField(default=0, help_text='熱度，主要由點讚數決定')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='創建時間')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新時間')),
            ],
            options={
                'verbose_name': '飼料',
                'verbose_name_plural': '飼料',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PetFeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_used', models.DateTimeField(default=django.utils.timezone.now, verbose_name='最近使用時間')),
                ('is_current', models.BooleanField(default=True, verbose_name='是否為目前使用中')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='備註')),
                ('feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pet_users', to='feeds.feed', verbose_name='飼料')),
                ('pet', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pet_feeds', to='pets.pet', verbose_name='寵物')),
            ],
            options={
                'verbose_name': '寵物飼料',
                'verbose_name_plural': '寵物飼料',
                'ordering': ['-last_used'],
                'unique_together': {('pet', 'feed')},
            },
        ),
        migrations.CreateModel(
            name='UserFeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_used', models.DateTimeField(default=django.utils.timezone.now, verbose_name='最近使用時間')),
                ('feed', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='feeds.feed', verbose_name='飼料')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feeds', to=settings.AUTH_USER_MODEL, verbose_name='用戶')),
            ],
            options={
                'verbose_name': '用戶飼料',
                'verbose_name_plural': '用戶飼料',
                'ordering': ['-last_used'],
                'unique_together': {('user', 'feed')},
            },
        ),
    ]
