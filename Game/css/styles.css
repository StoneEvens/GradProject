/* Shared styles for the Question Battle Game */
:root{
    --bg: #f0f0f0;
    --panel: #ffffff;
    --muted: rgba(0,0,0,0.6);
    --accent: #4CAF50;
    --danger: #f44336;
}
html,body{height:100%;}
body{
    margin:0;
    font-family:Arial,Helvetica,sans-serif;
    background-color:var(--bg);
    display:flex;
    justify-content:center;
    align-items:stretch;
}
#game-container{
    width:50vh; /* keep original intent */
    height:100vh;
    display:flex;
    flex-direction:column;
    background:var(--panel);
    box-shadow:0 0 10px rgba(0,0,0,0.1);
    overflow: hidden; /* clip falling elements so page doesn't grow */
}
#opponent-status-bar, #player-status-bar, #qa-section{
    padding:8px;
}

/* Make opponent bar more compact so battlefield gets more room */
#opponent-status-bar{
    height:64px; /* reduced from 90px */
    padding:6px 8px;
    background:#f8f8f8;
    border-bottom:1px solid #ddd;
    display:flex;
    align-items:center;
    box-sizing:border-box;
}
#battlefield{flex:1;display:flex;align-items:center;justify-content:center;background:var(--bg)}
/* make player bar match opponent compact style */
#player-status-bar{
    height:64px;
    padding:6px 8px;
    background:#f5f5f5;
    border-top:1px solid #ddd;
    display:flex;
    align-items:center;
    box-sizing:border-box;
    overflow: visible; /* allow avatar to overflow and pop above */
}

/* when the status bar falls, prevent it from expanding layout */
#player-status-bar.fall{
    position: relative;
    overflow: hidden;
}
/* give QA more breathing room */
#qa-section{height:180px;background:#e8e8e8;padding:12px;border-top:2px solid #ccc;display:flex;flex-direction:column;position:relative;overflow:hidden}

.stats-bar{width:100%;padding:12px;background:rgba(0,0,0,0.03);box-sizing:border-box;border-radius:6px}

/* Make the gray stats-bar fill the available height of the compact status bars
   so opponent and player bars look identical. Use flex column to stack label row and health bar. */
#opponent-status-bar .stats-bar,
#player-status-bar .stats-bar{
    padding:8px;
    height:100%;
    box-sizing:border-box;
    display:flex;
    flex-direction:column;
    justify-content:center; /* center the row vertically inside the stats bar */
}
.stats-row{display:flex;justify-content:space-between;align-items:center}
.health-label{margin:0;font-weight:700}
.health-text{margin:0}
.health-bar{width:100%;height:10px;background:#ddd;border-radius:12px;overflow:hidden}
.health-bar-fill{height:100%;background:var(--accent);transition:width .25s ease}

.display-area{display:flex;gap:16px;align-items:center}
.avatar{width:80px;height:80px;border-radius:8px;background:rgba(255,255,255,0.5);display:flex;align-items:center;justify-content:center;color:var(--muted);border:2px solid rgba(0,0,0,0.08)}

/* small avatar used inside compact status bars */
.status-avatar{
    width:96px;
    height:96px;
    font-size:16px;
    border-radius:12px;
    box-shadow: 0 10px 30px rgba(0,0,0,0.18);
    /* we'll absolutely position it inside the stats-bar so it doesn't affect layout */
}

/* Tooltip shown when hovering over player avatar */
.player-tooltip-wrap{position:absolute;left:110px;top:0;z-index:10002}
.player-tooltip{background:#fff;border:1px solid #ddd;padding:8px;border-radius:6px;box-shadow:0 6px 20px rgba(0,0,0,0.12);min-width:140px}
.player-tooltip .pt-row{font-size:13px;padding:4px 0}

/* player-specific layout: group avatar positioning and health stacking so visual
   presentation is identical but rules are easier to find and maintain */
#player-status-bar .stats-bar{
    position: relative;
    /* match opponent padding so the inner width for the health bar is identical */
    padding-left: 8px;
}

#player-status-bar .status-avatar{
    position: absolute;
    left: 12px;
    top: -74px; /* nudged up a few pixels to add space above the health bar */
    z-index: 6;
}

#player-status-bar .health-bar{
    position: relative;
    z-index: 4;
    margin-top: 4px;
}

#player-status-bar .health-bar-fill{
    background: var(--accent);
    z-index: 3;
}

#player-status-bar .stats-row{
    justify-content: flex-end;
}

#player-status-bar .health-text{
    margin-left: auto;
    text-align: right;
}

.question-container{display:flex;flex-direction:column;align-items:center;gap:12px}
.choices-container{display:grid;grid-template-columns:repeat(2,1fr);gap:10px;width:80%;max-width:600px}
.choice-button{padding:12px 16px;font-size:15px;background:var(--accent);color:#fff;border:none;border-radius:6px;cursor:pointer}
.choice-button:hover{filter:brightness(.95)}
.choice-button.selected{background:#2196F3}
.choice-button.correct{background:var(--accent)}
.choice-button.incorrect{background:var(--danger)}

.center-muted{text-align:center;color:var(--muted)}

/* NPC idle sprite sizing and placement */
.npc-wrap{
    --npc-scale: 3; /* scale factor; change this to zoom */
    --npc-offset: -70px; /* vertical offset to raise the wrap (negative = up) */
    width: 400px; /* nominal visible area (w) */
    height: 400px; /* nominal visible area (h) */
    max-width: 100%;
    max-height: 100%;
    overflow: hidden; /* clip the scaled image */
    display: flex; /* center horizontally, bottom-align vertically */
    align-items: flex-end;
    justify-content: center;
    margin: 0 auto;
    transform: translateY(var(--npc-offset));
}

.npc-idle{
    display: block;
    width: 360px; /* base width before scaling */
    height: auto;
    transform-origin: center bottom;
    transform: scale(var(--npc-scale));
    box-sizing: border-box;
}

/* shock / wiggle effect when player is hit */
@keyframes wiggle {
    0% { transform: translateX(0) rotate(0); }
    20% { transform: translateX(-6px) rotate(-1deg); }
    40% { transform: translateX(6px) rotate(1deg); }
    60% { transform: translateX(-4px) rotate(-0.5deg); }
    80% { transform: translateX(4px) rotate(0.5deg); }
    100% { transform: translateX(0) rotate(0); }
}

.wiggle {
    animation: wiggle 420ms ease-in-out;
}

/* falling animation used when player loses: avatar and QA content drop down and fade */
@keyframes fall {
    0% { transform: translateY(0) rotate(0); opacity: 1; }
    60% { transform: translateY(45vh) rotate(6deg); opacity: .9; }
    100% { transform: translateY(120vh) rotate(20deg); opacity: 0; }
}

.fall {
    animation-name: fall;
    animation-duration: var(--fall-duration, 1200ms);
    animation-timing-function: ease-in;
    animation-fill-mode: forwards;
}

/* ensure falling elements appear above everything while animating */
.fall {
    z-index: 9999;
}

#player-status-bar.fall{
    z-index: 9998; /* slightly under avatar so avatar appears above the bar */
}

.qa-container.fall{
    z-index: 10000;
}

.status-avatar.fall{
    z-index: 10001;
}

/* make avatar fall a touch faster and with small rotation origin tuned for visual effect */
.status-avatar.fall{
    transform-origin: center center;
    animation-duration: var(--fall-duration, 1000ms);
}

/* QA container fall style (applies to top-level QA wrapper) */
.qa-container.fall{
    animation-duration: var(--fall-duration, 1400ms);
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
}
